// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model aplicativos {
  idAplicativo Int @id @default(autoincrement())
  nombre String @db.VarChar(50)
  roles roles[]
  usuarios usuarios[]
  modulos modulos[]
}

model roles {
  idRol Int @id @default(autoincrement())
  nombre String @db.VarChar(20)
  idAplicativo Int
  aplicativo aplicativos @relation(fields: [idAplicativo], references: [idAplicativo])
  usuarios usuarios[]
  permisos permisos[]
}

model usuarios {
 idUsuario Int @id @default(autoincrement())
 login String @db.VarChar(30) @unique
 password String @db.VarChar(20)
 idAplicativo Int
 idRol Int
 idPersona Int @unique
 persona personas @relation(fields: [idPersona], references: [idPersona])
 aplicativo aplicativos @relation(fields: [idAplicativo], references: [idAplicativo])
 rol roles @relation(fields: [idRol], references: [idRol])
 accesos accesos[]
}

model modulos {
  idModulo Int @id @default(autoincrement())
  idAplicativo Int
  modulo String @db.VarChar(50)
  aplicativo aplicativos @relation(fields: [idAplicativo], references: [idAplicativo])
  rutas rutas[]
}

model rutas {
  idRuta Int @id @default(autoincrement())
  nombre String @db.VarChar(50)
  url String @db.VarChar(100)
  idModulo Int
  modulo modulos @relation(fields: [idModulo], references: [idModulo])
  permisos permisos[]
}

model permisos {
  idPermiso Int @id @default(autoincrement())
  nombre String @db.VarChar(30)
  idRol Int
  idRuta Int
  rol roles @relation(fields: [idRol], references: [idRol])
  ruta rutas @relation(fields: [idRuta], references: [idRuta])
}

enum estado {
  activo
  inactivo
}

model accesos {
  idAcceso Int @id @default(autoincrement())
  token String @db.VarChar(200)
  idUsuario Int
  fechaIngreso DateTime @default(now())
  fechaSalida DateTime?
  estado estado @default(activo)
  usuario usuarios @relation(fields: [idUsuario], references: [idUsuario])
}

model departamentos {
  idDepartamento Int @id @default(autoincrement())
  nombre String @db.VarChar(50)
  municipios municipios[]
}

model municipios {
  idMunicipio Int @id @default(autoincrement())
  nombre String @db.VarChar(50)
  idDepartamento Int
  departamento departamentos @relation(fields: [idDepartamento], references: [idDepartamento])
  ambientes ambientes[]
  personas personas[]
}

enum genero {
  masculino
  femenino
}

enum cargo {
  instructor
  aprendiz
  coordinador
  secretaria
  lider
  vocero
}

model personas {
  idPersona Int @id @default(autoincrement())
  nombre String @db.VarChar(50)
  telefono String @db.VarChar(20)
  direccion String @db.VarChar(50)
  correo String @db.VarChar(50)
  idMunicipio Int
  municipio municipios @relation(fields: [idMunicipio], references: [idMunicipio])
  genero genero
  usuario usuarios?
  cargo cargo
  estado estado @default(activo)
  curso cursos?
  matricula matriculas?
}

model centroFormacion {
  idCentro Int @id @default(autoincrement())
  nombre String @db.VarChar(50)
  sedes sedes[]
}

model sedes {
  idSede Int @id @default(autoincrement())
  nombre String @db.VarChar(50)
  idCentro Int
  centroFormacion centroFormacion @relation(fields: [idCentro], references: [idCentro])
  ambientes ambientes[]
  areas areas[]
}

model ambientes {
  idAmbiente Int @id @default(autoincrement())
  nombre String @db.VarChar(50)
  idMunicipio Int
  idSede Int
  municipio municipios @relation(fields: [idMunicipio], references: [idMunicipio])
  sede sedes @relation(fields: [idSede], references: [idSede])
}

model areas {
  idArea Int @id @default(autoincrement())
  nombre String @db.VarChar(50)
  idSede Int
  sede sedes @relation(fields: [idSede], references: [idSede])
  cursos cursos[]
}

enum tipo {
  tic
  agricola
  administrativo
}

model programas {
  idPrograma Int @id @default(autoincrement())
  nombre String @db.VarChar(50)
  tipo tipo
  cursos cursos[]
}

model cursos {
  idCurso Int @id @default(autoincrement())
  codigo Int
  fechaInicio DateTime
  fechaFin DateTime
  finLectiva DateTime
  idArea Int
  idPrograma Int
  idPersona Int @unique
  area areas @relation(fields: [idArea], references: [idArea])
  programa programas @relation(fields: [idPrograma], references: [idPrograma])
  lider personas @relation(fields: [idPersona], references: [idPersona])
  matriculas matriculas[]
}

model matriculas {
  idMatricula Int @id @default(autoincrement())
  idPersona Int @unique
  idCurso Int
  persona personas @relation(fields: [idPersona], references: [idPersona])
  curso cursos @relation(fields: [idCurso], references: [idCurso])
}